stages:
  - build
  - test
  - codeCoverage
  - docker
  - heroku
build:
  image: adoptopenjdk:11
  stage: build
  script:
    - ./gradlew bootJar
  cache:
    key: GRADLE-BUILD-FILES
    paths:
      - build/
  artifacts:
    paths:
      - build/classes/java/
      - build/libs/*.jar
test:
  image: adoptopenjdk:11
  needs:
    - build
  stage: test
  script:
    ./gradlew test
  artifacts:
    paths:
      - build/classes/java/
      - build/test-results/test/*.xml
codeCoverage:
  image: adoptopenjdk:11
  needs:
    - build
    - test
  stage: codeCoverage
  script:
    ./gradlew jacocoTestReport
    ./gradlew jacocoTestCoverageVerification
  allow_failure: true
  artifacts:
    when: always
    paths:
      - build/reports/jacoco/
docker:
  image: docker:20
  needs:
    - build
    - test
  stage: docker
  services:
    - docker:dind
  before_script:
    - echo "$MY_NAME"
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" .
    - docker push "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID"
    - docker tag "$CI_REGISTRY_IMAGE":"$CI_PIPELINE_IID" "$CI_REGISTRY_IMAGE":"latest"
    - docker push "$CI_REGISTRY_IMAGE":"latest"
heroku:
  stage: heroku
  image: ruby:latest
  script:
      - apt-get update -qy
      - apt-get install -y ruby-dev
      - gem install dpl
      - dpl --provider=heroku --app=vw-autos-api --api-key=$HEROKU_API
  only:
      - main
